name: Rotate Claude OAuth Tokens

on:
  schedule:
    - cron:  '0 18 * * 0'        # 毎週月曜 AM-3:00 (JST)
  workflow_dispatch:

permissions:
  contents: read                 # リポジトリ公開鍵の取得だけ

jobs:
  rotate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (for gh secret)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0         # clone が浅くても OK

      - name: Install jq
        run: sudo apt-get -y update && sudo apt-get -y install jq

      - name: Refresh via Anthropic OAuth
        id: refresh
        env:
          REFRESH_TOKEN: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
        run: |
          set -e
          resp=$(curl -sS -X POST https://api.anthropic.com/oauth/token \
            -d grant_type=refresh_token \
            -d refresh_token="$REFRESH_TOKEN" \
            -d client_id=gh-action \
            -d client_secret=unused)

          new_access=$(echo "$resp" | jq -r .access_token)
          new_refresh=$(echo "$resp" | jq -r .refresh_token)
          # expires_at が無い場合は 30 分後-1 分を設定
          new_expires=$(echo "$resp" | jq -r '.expires_at // empty')
          if [[ -z "$new_expires" ]]; then
            new_expires=$(($(date +%s) + 1740))
          fi

          if [[ -z "$new_access" || -z "$new_refresh" ]]; then
            echo "❌ Failed to parse tokens"; echo "$resp"; exit 1
          fi

          echo "::add-mask::$new_access"
          echo "::add-mask::$new_refresh"
          echo "access=$new_access"   >> "$GITHUB_OUTPUT"
          echo "refresh=$new_refresh" >> "$GITHUB_OUTPUT"
          echo "expires=$new_expires" >> "$GITHUB_OUTPUT"

      - name: Update repo secrets (gh CLI)
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}         # Fine-grained PAT
        run: |
          gh secret set CLAUDE_ACCESS_TOKEN  --repo "$GITHUB_REPOSITORY" -b"${{ steps.refresh.outputs.access }}"
          gh secret set CLAUDE_REFRESH_TOKEN --repo "$GITHUB_REPOSITORY" -b"${{ steps.refresh.outputs.refresh }}"
          gh secret set CLAUDE_EXPIRES_AT    --repo "$GITHUB_REPOSITORY" -b"${{ steps.refresh.outputs.expires }}"
          echo "✅ GitHub Secrets updated"

      - name: Notify Slack on failure (optional)
        if: failure() && env.SLACK_WEBHOOK != ''
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d '{"text":"❗️ Claude token rotation failed for repo '"$GITHUB_REPOSITORY"'. See run '"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"'"}' \
            "$SLACK_WEBHOOK"
